# BF→C Transpiler — Test Programs

This folder contains Brainfuck classics to verify your `bf2c` tool:

- **utm.bf** (Universal Turing Machine)  
  - Minimal input: `b1b1bbb1c1c11111`  
  - **Char mode**:  
    ```bash
    ./bf2c utm.bf utm.c --mode=char
    gcc -O2 -o utm utm.c
    echo -n b1b1bbb1c1c11111 | ./utm
    ```
- **bsort.bf** (Bubble sort, zero terminator)  
  - **Number mode**:  
    ```bash
    ./bf2c bsort.bf bsort.c --mode=number
    gcc -O2 -o bsort bsort.c
    echo "5 3 8 1 0" | ./bsort
    ```
- **random.bf** (Rule-30 RNG—never ends)  
  - **Number mode**:  
    ```bash
    ./bf2c random.bf random.c --mode=number
    gcc -O2 -o random random.c
    ./random
    ```
- **ROT13.bf** (ROT13 cipher, EOF-terminated)  
  - **Char mode**:  
    ```bash
    ./bf2c ROT13.bf rot13.c --mode=char
    gcc -O2 -o rot13 rot13.c
    echo "Hello" | ./rot13
    ```
- **fib.bf** (nth Fibonacci)  
  - **Number mode**:  
    ```bash
    ./bf2c fib.bf fib.c --mode=number
    gcc -O2 -o fib fib.c
    echo 10 | ./fib
    ```

## Quick Workflow

```bash
make all
# translate & compile any .bf:
./bf2c foo.bf foo.c --mode=<char|number>
gcc -O2 -o foo foo.c
./foo [< input]
